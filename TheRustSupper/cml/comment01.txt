#![allow(unused)]

// https://youtu.be/ygL_xcavzQ4?si=fjGFFfamtpNByIw6

use std::io;
use rand::Rng;
use std::io::{Write,BufReader,BufRead,ErrorKind};
use std::fs::File; 
use std::cmp::Ordering;

fn main() {
//**************************************************************************************************
// Ch01
// * https://www.tutorialspoint.com/rust/rust_input_output.htm 
//**************************************************************************************************
    // mut = mutable
    /*
    let mut UserAnswer:String=String::new();
    println!("What is the value of e");
    let b1 = std::io::stdin().read_line(&mut UserAnswer).unwrap();
    println!("That is correct.");
    println!("The value of e is {}.", UserAnswer);
    // println!("no of bytes read , {}", b1);
    */
//**************************************************************************************************
//**************************************************************************************************
// Ch01: Data Type
// * https://www.codingame.com/playgrounds/365/getting-started-with-rust/primitive-data-types
//**************************************************************************************************
    let che_bool:bool=true;
    let che_char='c'; 
    // let che_Error_i8:i8=128; 
    // literal out of range for `i8`
    // the literal `128` does not fit into the type `i8` whose range is `-128..=127`
    // consider using the type `u8` instead
    println!("i8___:{}",i8::MAX);       // i8___ = 127
    println!("i16__:{}",i16::MAX);      // i16__ = 32767
    println!("i32__:{}",i32::MAX);      // i32__ = 2147483647
    println!("i64__:{}",i64::MAX);      // i64__ = 9223372036854775807
    println!("isize:{}",isize::MAX);    // isize = 9223372036854775807
    println!("i128_:{}",i128::MAX);     // i128_ = 170141183460469231731687303715884105727
    println!("u8___:{}",u8::MAX);       // u8___ = 255
    println!("u16__:{}",u16::MAX);      // u16__ = 65535
    println!("u32__:{}",u32::MAX);      // u32__ = 4294967295
    println!("u64__:{}",u64::MAX);      // u64__ = 18446744073709551615
    println!("usize:{}",usize::MAX);    // usize = 18446744073709551615
    println!("u128_:{}",u128::MAX);     // u128_ = 340282366920938463463374607431768211455
    println!("f32__:{}",f32::MAX);      // f32__ = 340282350000000000000000000000000000000
    println!("f64__:{}",f64::MAX);      // f64__ = 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

}
/*
cargo run
*/