
println!("//**************************************************************************************************");
println!("// DISPLAY ARRAY");
println!("//**************************************************************************************************");
let avatar_friends=Array{data:["Aang","Katara","Zuko","Sokka","Toph","Suki","Bumi","Appa","Kuzon","Azula","Tylee","Mia"]};
printloop(avatar_friends.data);
avatar_friends.printloop();
println!("avatar_friends.longname() = {}",avatar_friends.longname());
println!("avatar_friends = {}",avatar_friends.joining("_,_".to_string()));
println!("There are {} avatar friends",avatar_friends.data.len());
let zeros=Array::new(0);
printloop(zeros.data);
let txt="TxT";
let txts=Array::new(txt);
printloop(txts.data);

println!("//**************************************************************************************************");
println!("// F64 ARRAY");
println!("//**************************************************************************************************");

println!("//**************************************************************************************************");
println!("// STRUCT WITH MULTIPLE GENERIC TYPES (T,U)");
println!("//**************************************************************************************************");

println!("//**************************************************************************************************");
println!("// ENUM WITH GENERIC 2 TYPES");
println!("//**************************************************************************************************");

println!("//**************************************************************************************************");
println!("// TRAIT");
println!("//**************************************************************************************************");
let cheche:Person=Person{
    name:"CheChe".to_string(),
    age:23 as u32,
    occupation:Occupation::Programmer("No Job".to_string()),
    tierlist:TierList::F
};
let elon_musk:CEO<4>=CEO{
    name:"Elon Musk".to_string(),
    age:52 as u32,
    field:"Technology".to_string(),
    workers:[
Person{
    name:"Mumu".to_string(),
    age:26 as u32,
    occupation:Occupation::Scientist("Biologist".to_string()),
    tierlist:TierList::A
},
Person{
    name:"Tata".to_string(),
    age:20 as u32,
    occupation:Occupation::Engineer("Musical Civil Engineer".to_string()),
    tierlist:TierList::A
},
Person{
    name:"Khem".to_string(),
    age:21 as u32,
    occupation:Occupation::Programmer("ML Engineer".to_string()),
    tierlist:TierList::A
},
Person{
    name:"Phoom".to_string(),
    age:22 as u32,
    occupation:Occupation::Programmer("Rust Big O Optimizer".to_string()),
    tierlist:TierList::A
},
]
};
println!("say_my_name()");
println!("cheche {}",cheche.say_my_name());
println!("elon_musk {}",elon_musk.say_my_name());
println!("avatar_friends {}",avatar_friends.say_my_name());
println!("zeros {}",zeros.say_my_name());
println!("is_1st_char_capital()");
println!("cheche {}",cheche.is_1st_char_capital());
println!("elon_musk {}",elon_musk.is_1st_char_capital());
println!("avatar_friends {}",avatar_friends.is_1st_char_capital());
println!("zeros {}",zeros.is_1st_char_capital());
println!("count_char");
println!("cheche {}",cheche.count_char());
println!("elon_musk {}",elon_musk.count_char());
println!("avatar_friends {}",avatar_friends.count_char());
println!("zeros {}",zeros.count_char());
let z01=Array::new(1);
let z02=Array::new(2);
let z03=Array::new(3);
let z04=Array::new(4);
let z05=Array::new(5);
let z06=Array::new(6);
let ls:[SayMyName;9]=[
    z01,
    z02,
    elon_musk,
    z03,
    z04,
    avatar_friends,
    z05,
    z06,
    cheche,
];
println!("There are {} entities with unknown name",ls.count_unknown_name());
println!("{}",avatar_friends.greet_ii());
println!("{}",avatar_friends.its_type_ii());
println!("println_2types");
println_2types(cheche,avatar_friends);
println!("//**************************************************************************************************");
println!("// ???");
println!("//**************************************************************************************************");
