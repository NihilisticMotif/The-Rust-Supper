#![allow(unused)]

// https://youtu.be/BpPEoZW5IiY?si=goDW5z6qEkPok4pe
fn first_letter(s: &str) -> &str {
    &s[..1]
}
fn main() {
//**************************************************************************************************
// EXAMPLE NO.1 ARRAY AMPERSAND SLICE
//**************************************************************************************************
// let arr = [1, 2, 3];
// // The length of slice is not known at comply time.
// // so I use & to borrow the value of the array.
// let s1: &[i32] = &arr[0..2];
// let s2: &str = "hello, world";

//**************************************************************************************************
// EXAMPLE NO.2 TOTAL NUMBER, STD MEM SIZE OF VAL
//**************************************************************************************************
// let arr: [char; 3] = ['中', '国', '人'];
// let slice = &arr[..2];
// println!("slice = {:?}",slice);
// println!("Count Byte in slice = {}",std::mem::size_of_val(&slice));

//**************************************************************************************************
// EXAMPLE NO.3 &
//**************************************************************************************************
// let arr: [i32; 5] = [1, 2, 3, 4, 5];
// // do not specify the size of the slice.
// // the size of slice is unknown.
// let slice: &[i32] = &arr[1..4];
// assert_eq!(slice, &[2, 3, 4]);

//**************************************************************************************************
// EXAMPLE NO.4 SLICE STARTING FROM THE FIRST ELEMENT.
//**************************************************************************************************
// let s = String::from("hello");
// let slice1 = &s[0..2];
// let slice2 = &s[..2];
// assert_eq!(slice1, slice2);

//**************************************************************************************************
// EXAMPLE NO.5 SLICE STARTING FROM THE FIRST ELEMENT.
//**************************************************************************************************
// let charchar="你".bytes();
// println!("你 = {:?}",charchar);
// // 你 = Bytes(Copied { it: Iter([228, 189, 160]) })
// let s = "你好，世界";
// let slice = &s[0..3];
// assert!(slice == "你");

//**************************************************************************************************
// EXAMPLE NO.6 SLICE STARTING FROM THE FIRST ELEMENT.
//**************************************************************************************************
let mut s = String::from("hello world");
let letter = first_letter(&s);
println!("the first letter is: {}", letter);
println!("Previous s = {}",s);
s.clear(); // make s = "" 
s="Its me DIO!".to_string();
println!("Current s = {}",s);

}

/*
cargo run
*/